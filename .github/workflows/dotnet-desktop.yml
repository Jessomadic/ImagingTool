name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: write  # This is needed to read the contents of the repository
  actions: write  # This allows creating the repository_dispatch event


jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-2025

    env:
      Solution_Name: ImagingTool.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.202

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: dotnet restore $env:Solution_Name

      - name: Build the application
        run: msbuild $env:Solution_Name /p:Configuration=${{ matrix.configuration }}
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Find and zip build output
        shell: pwsh
        run: |
          $outputDirs = Get-ChildItem -Recurse -Directory -Filter net9.0
          if (-not $outputDirs) {
            Write-Error "❌ No net9.0 output directory found!"
          }

          $buildDir = $outputDirs[0].FullName
          $zipPath = "output-${{ matrix.configuration }}.zip"

          Compress-Archive -Path "$buildDir\*" -DestinationPath $zipPath -Force
          if (-not (Test-Path $zipPath)) {
            Write-Error "❌ ZIP file not created!"
          } else {
            Write-Host "✅ Zipped build output from: $buildDir -> $zipPath"
          }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-artifact-${{ matrix.configuration }}
          path: output-${{ matrix.configuration }}.zip

     # - name: Trigger second workflow (Upload Release Asset)
      #  run: |
      #    curl -X POST "https://api.github.com/repos/Jessomadic/ImagingTool/dispatches" `
      #    -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" `
       #   -H "Content-Type: application/json" `
       #   -d '{"event_type": "trigger-upload-artifact-workflow"}'

