name: Upload Release Asset

on:
  workflow_run:
    workflows: ["dotnet-desktop.yml"]
    types: [completed, requested]
  workflow_dispatch:  # Add this to allow manual triggering
      
permissions:
  contents: write  # This is needed to read the contents of the repository
  actions: write  # This allows creating the repository_dispatch event
  
jobs:
  publish:
    name: Publish Release
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    
    runs-on: windows-2025  # Ensure you're using the right runner for your setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}  # This ensures we're working with the branch from the first workflow

      - name: Download artifact from previous workflow
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: dotnet-desktop.yml  # This must match the first workflow name exactly
          name: built-artifact-Debug  # This must match the artifact name from the first workflow exactly
          run_id: ${{ github.event.workflow_run.id }}
          path: ./artifact

      - name: Tag the commit with current date and time (12-hour format)
        id: tag_commit
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          $current_date = Get-Date -Format "yyyy-MM-dd-hh-mm-ss-tt"  # 12-hour format
          $tag_name = "v$current_date"
          git tag $tag_name
          git push origin $tag_name
          echo "tag_name=$tag_name" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_commit.outputs.tag_name }}  # Use the dynamic tag from the previous step
          release_name: "Intermediate Release ${{ steps.tag_commit.outputs.tag_name }}"
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/output-Debug.zip  # Match the actual artifact name
          asset_name: ImagingTool-Debug.zip  # Give it a clearer name
          asset_content_type: application/zip
